[{"/Users/graus/Documents/JS/OL_gis/geo2/src/App.js":"1","/Users/graus/Documents/JS/OL_gis/geo2/src/data.js":"2","/Users/graus/Documents/JS/OL_gis/geo2/src/reportWebVitals.js":"3","/Users/graus/Documents/JS/OL_gis/geo2/src/index.js":"4","/Users/graus/Documents/JS/OL_gis/geo2/src/mapo.js":"5","/Users/graus/Documents/JS/OL_gis/geo2/src/table.js":"6"},{"size":197,"mtime":1613566616122,"results":"7","hashOfConfig":"8"},{"size":5725,"mtime":1615630287550,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611699659703,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1613395981347,"results":"11","hashOfConfig":"8"},{"size":7603,"mtime":1615630402080,"results":"12","hashOfConfig":"8"},{"size":1261,"mtime":1615630386017,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1337wvo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/graus/Documents/JS/OL_gis/geo2/src/App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport PublicMap from './mapo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PublicMap />\n    </div>\n  );\n}\n\nexport default App;\n",["32","33"],"/Users/graus/Documents/JS/OL_gis/geo2/src/data.js",["34","35","36","37","38","39","40","41","42","43","44"],"import React, { Component } from \"react\";\nimport Polygon from 'ol/geom/Polygon';\nimport {transformExtent} from 'ol/proj';\nimport {fromLonLat, transform} from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\n\nexport default async function userAction(state, source,veri) {\n    let sinir = state.sinir;\n    let ssinir = sinirla(sinir);\n    let query = query1(ssinir)\n    let qpoligon = query[0]\n    let qnode = query[1]\n    let url = 'https://z.overpass-api.de/api/interpreter';\n    let PolygonJSON = await PolyFetch(qpoligon,url);\n    let array = wrapper(PolygonJSON,source);\n    let noktalar = array[0];\n    let polygonlar = array[1];\n    veri[0] = noktalar;\n    veri[1] = polygonlar;\n    veri[2] = {};\n    veri[2].bank = noktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"bank\" );\n    veri[2].school = noktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"school\" );\n    veri[2].place_of_worship = noktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"place_of_worship\" );\n    \n    \n}\n\nfunction sinirla(sinir) {\n    let ebbox = [sinir[1],sinir[0],sinir[3],sinir[2] ];\n    let stringe = JSON.stringify(ebbox[0])+','+JSON.stringify(ebbox[1])+','+JSON.stringify(ebbox[2])+','+JSON.stringify(ebbox[3]);\n    return stringe\n}\nfunction query1(stringe) {\n    var q2 = '[out:json] [bbox:'+ stringe   +'];(  relation[\"admin_level\"=6][\"type\"= \"boundary\"][\"boundary\"= \"administrative\"]; map_to_area->.a;  (node(area.a)[amenity];););  out geom; ';\n    var q3 = '[out:json] [bbox:'+ stringe   +'];(  node[\"amenity\"];);  out geom; ';\n    var r = [q2,q3]\n    return r\n}\n\nasync function PolyFetch(q, url) {\n    let response; \n    response = await fetch(url,{method: 'POST',\nbody:q });\n    let cevap = await response.json(); \n    return await cevap\n  \n}\n\n\nasync function test() {\n    let url = 'https://lz4.overpass-api.de/api/interpreter';\n    let q = '[out:json] [bbox:41.01935,28.83165,41.02202,29.01139];(  relation[\"admin_level\"=6][\"type\"= \"boundary\"][\"boundary\"= \"administrative\"];);  out geom; ';\n    let cevap = await PolyFetch(q, url);\n    let f = await mainProcess(cevap.elements[1]);\n    console.log( f);\n}\n\nfunction transform2(g) {\n    return transform(Object.values(g).reverse(),'EPSG:4326', 'EPSG:3857');\n  }\n\nfunction ways(element) {\n    var ways = [];\n    element.members.forEach((element2,index,array)=> {\n        if (element2.type ===\"way\") {\n          ways.push(element2);\n  \n            }\n        else; ; } ); \n    return ways\n}\n\nfunction processWays(ways ) {\n    var ring1 = [];\n    var current = ways.pop();\n      \n    var cord = current.geometry.map(geo=>transform(Object.values(geo).reverse(),'EPSG:4326', 'EPSG:3857'));\n\n    ring1.push(cord);\n    while(   JSON.stringify(ring1.flat()[0])    !==  JSON.stringify(ring1.flat()[ring1.flat().length - 1])) {\n        \n        var last = ring1.flat()[ring1.flat().length-1];\n\n        var currentindex = ways.findIndex(way => JSON.stringify(transform2(way.geometry[0])) == JSON.stringify(last));\n        \n        \n        \n        if (currentindex == -1) {\n          currentindex = ways.findIndex(way => JSON.stringify(transform2(way.geometry[way.geometry.length-1])) == JSON.stringify(last));\n          \n          current = ways.splice(currentindex, 1);\n          \n          cord = current[0].geometry.map(geo=>transform(Object.values(geo).reverse(),'EPSG:4326', 'EPSG:3857'));\n          ring1.push(cord.reverse());\n        } else {\n\n          current = ways.splice(currentindex, 1);\n          \n          \n          cord = current[0].geometry.map(geo=>transform(Object.values(geo).reverse(),'EPSG:4326', 'EPSG:3857'));\n          ring1.push(cord);\n          \n        }\n      }\n    return ring1\n}\n\nfunction mainProcess(element, noktalar) {\n    var pname = element.tags.name;\n    var pid = element.id;\n    let ways1 = ways(element);\n    let ring1 = processWays(ways1);\n    var ring = ring1.flat();\n    var newg = new Polygon([ring]);\n    var pnoktalar = noktalar.filter(nokta => newg.intersectsCoordinate(nokta.getGeometry().getCoordinates()));\n    let banka = pnoktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"bank\" );\n    let okul = pnoktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"school\" );\n    let cami = pnoktalar.filter(nokta => nokta.getProperties().tags[\"amenity\"] === \"place_of_worship\" );\n    let feature1 = new Feature({\n        geometry: new Polygon([ring]),\n        name : pname,\n        id : pid, \n        noktalar: pnoktalar,\n        bank: banka,\n        okullar: okul,\n        camiler: cami,        \n      });\n    return feature1\n\n}\n\nfunction poly(array) {\n    let pa = array.filter(e => e.type === \"relation\");\n    return pa\n}\nfunction node(array) {\n    let na = array.filter(e => e.type === \"node\");\n    return na\n}\n\nfunction nodeProcess (nodes) {\n    let noktalar2 = [];\n    nodes.forEach((element)=> {\n        var noktarr = [element.lon, element.lat];\n        var cnokta = transform(noktarr, 'EPSG:4326', 'EPSG:3857' );\n        var noktaid = element.id;\n        var noktatag = element.tags;\n        var noktaname = element.tags.name;\n        \n        var fnokta = new Feature({\n          geometry: new Point(cnokta),\n          id: noktaid,\n          tags: noktatag,\n          name: noktaname,\n        });\n        noktalar2.push(fnokta);\n    \n      } );\n    return noktalar2\n}\n\nfunction wrapper(json, source) {\n    let array = json.elements;\n    let pa = poly(array);\n    let nodes = node(array);\n    let noktalar = nodeProcess(nodes);\n    let polygonlar = [];\n    pa.forEach(element => {\n        let f = mainProcess(element,noktalar);\n        source.addFeature(f);\n        polygonlar.push(f);\n    });\n    return [noktalar,polygonlar]\n\n}\n\n\n\n\n\n","/Users/graus/Documents/JS/OL_gis/geo2/src/reportWebVitals.js",[],["45","46"],"/Users/graus/Documents/JS/OL_gis/geo2/src/index.js",[],"/Users/graus/Documents/JS/OL_gis/geo2/src/mapo.js",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"/Users/graus/Documents/JS/OL_gis/geo2/src/table.js",["66","67"],"import React, { Component } from \"react\";\n\n\nclass Tablo extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            noktalar:this.props.noktalar,\n            poligon:this.props.poligon,\n        }    \n    }\n    \n\n    \n   poligonToTable(plist) {\n    \n    let tablolist2 = plist.map((ilce, index) => {\n        \n        let ilce2 = ilce.values_;\n        \n        const {geometry, name, id, noktalar,bank, okullar,camiler} = ilce2;\n        \n        return(\n        <tr key={id}>\n          <td>{id}</td>\n          <td>{name}</td>\n          <td>{bank.length}</td>\n          <td>{okullar.length}</td>\n          <td>{camiler.length}</td>\n          \n          \n        </tr>\n        )       \n      })\n    return tablolist2\n   }\n\n    render() {\n        \n        return(\n        \n        <div>\n        \n\n        <table>\n        <thead>\n        <tr>\n            <th >OSM id</th>\n            <th >İlçe İsim</th>\n            <th >Banka sayisi</th>\n            <th >Okul sayisi</th>\n            <th >İbadethane sayisi</th>\n        </tr>\n    </thead>\n            <tbody>\n                {this.poligonToTable(this.state.poligon)}\n            </tbody>\n\n        </table>\n        </div>\n        )\n    }\n}\n\nexport default Tablo;",{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"68","severity":1,"message":"78","line":3,"column":9,"nodeType":"70","messageId":"71","endLine":3,"endColumn":24},{"ruleId":"68","severity":1,"message":"79","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":19},{"ruleId":"68","severity":1,"message":"80","line":13,"column":9,"nodeType":"70","messageId":"71","endLine":13,"endColumn":14},{"ruleId":"68","severity":1,"message":"81","line":51,"column":16,"nodeType":"70","messageId":"71","endLine":51,"endColumn":20},{"ruleId":"82","severity":1,"message":"83","line":85,"column":43,"nodeType":"84","messageId":"85","endLine":85,"endColumn":117},{"ruleId":"86","severity":1,"message":"87","line":85,"column":94,"nodeType":"88","messageId":"89","endLine":85,"endColumn":96},{"ruleId":"86","severity":1,"message":"87","line":89,"column":26,"nodeType":"88","messageId":"89","endLine":89,"endColumn":28},{"ruleId":"82","severity":1,"message":"83","line":90,"column":41,"nodeType":"84","messageId":"85","endLine":90,"endColumn":135},{"ruleId":"86","severity":1,"message":"87","line":90,"column":112,"nodeType":"88","messageId":"89","endLine":90,"endColumn":114},{"ruleId":"72","replacedBy":"90"},{"ruleId":"74","replacedBy":"91"},{"ruleId":"68","severity":1,"message":"92","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"93","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":11},{"ruleId":"68","severity":1,"message":"94","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":15},{"ruleId":"68","severity":1,"message":"95","line":8,"column":19,"nodeType":"70","messageId":"71","endLine":8,"endColumn":30},{"ruleId":"68","severity":1,"message":"96","line":8,"column":32,"nodeType":"70","messageId":"71","endLine":8,"endColumn":36},{"ruleId":"68","severity":1,"message":"97","line":8,"column":38,"nodeType":"70","messageId":"71","endLine":8,"endColumn":44},{"ruleId":"68","severity":1,"message":"98","line":8,"column":46,"nodeType":"70","messageId":"71","endLine":8,"endColumn":51},{"ruleId":"68","severity":1,"message":"99","line":9,"column":8,"nodeType":"70","messageId":"71","endLine":9,"endColumn":20},{"ruleId":"68","severity":1,"message":"100","line":11,"column":17,"nodeType":"70","messageId":"71","endLine":11,"endColumn":29},{"ruleId":"68","severity":1,"message":"101","line":13,"column":21,"nodeType":"70","messageId":"71","endLine":13,"endColumn":30},{"ruleId":"68","severity":1,"message":"102","line":15,"column":10,"nodeType":"70","messageId":"71","endLine":15,"endColumn":21},{"ruleId":"68","severity":1,"message":"103","line":16,"column":8,"nodeType":"70","messageId":"71","endLine":16,"endColumn":15},{"ruleId":"68","severity":1,"message":"104","line":17,"column":8,"nodeType":"70","messageId":"71","endLine":17,"endColumn":13},{"ruleId":"68","severity":1,"message":"105","line":18,"column":8,"nodeType":"70","messageId":"71","endLine":18,"endColumn":28},{"ruleId":"68","severity":1,"message":"106","line":92,"column":13,"nodeType":"70","messageId":"71","endLine":92,"endColumn":22},{"ruleId":"68","severity":1,"message":"107","line":119,"column":15,"nodeType":"70","messageId":"71","endLine":119,"endColumn":19},{"ruleId":"68","severity":1,"message":"106","line":128,"column":15,"nodeType":"70","messageId":"71","endLine":128,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":169,"column":9,"nodeType":"110","endLine":169,"endColumn":98},{"ruleId":"111","severity":1,"message":"112","line":169,"column":9,"nodeType":"110","endLine":169,"endColumn":98},{"ruleId":"68","severity":1,"message":"113","line":22,"column":16,"nodeType":"70","messageId":"71","endLine":22,"endColumn":24},{"ruleId":"68","severity":1,"message":"114","line":22,"column":36,"nodeType":"70","messageId":"71","endLine":22,"endColumn":44},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'React' is defined but never used.","'Component' is defined but never used.","'transformExtent' is defined but never used.","'fromLonLat' is defined but never used.","'qnode' is assigned a value but never used.","'test' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'last'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["115"],["116"],"'OSMXML' is defined but never used.","'XYZ' is defined but never used.","'Polygon' is defined but never used.","'CircleStyle' is defined but never used.","'Fill' is defined but never used.","'Stroke' is defined but never used.","'Style' is defined but never used.","'GeometryType' is defined but never used.","'bboxStrategy' is defined but never used.","'transform' is defined but never used.","'arrayToGlsl' is defined but never used.","'Feature' is defined but never used.","'Point' is defined but never used.","'intersectsCoordinate' is defined but never used.","'container' is assigned a value but never used.","'hdms' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'geometry' is assigned a value but never used.","'noktalar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]